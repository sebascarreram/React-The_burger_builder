{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","key","className","classes","Span","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,sB,yHC6BvCC,EA3BD,SAAAC,GACZ,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACvC,OACE,0BAAMC,IAAKD,EAAGJ,KAAMM,UAAWC,IAAQC,MACpCJ,EAAGJ,KADN,KACcI,EAAGH,OADjB,QAKJ,OACE,yBAAKK,UAAWC,IAAQE,OACtB,2CAAiBP,GACjB,qCACS,uCAAaQ,OAAOC,WAAWf,EAAMgB,OAAOC,QAAQ,O,gCCf7DC,E,4LAEFC,KAAKnB,MAAMoB,cAAcD,KAAKnB,MAAMqB,MAAOF,KAAKnB,MAAMsB,U,+BAGtD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAUb,OATKL,KAAKnB,MAAMyB,UACdF,EAASJ,KAAKnB,MAAMuB,OAAOhB,KAAI,SAAAR,GAAK,OAClC,kBAACc,EAAD,CACEJ,IAAKV,EAAM2B,GACXzB,YAAaF,EAAME,YACnBe,MAAOjB,EAAMiB,YAIZ,6BAAMO,O,GAfII,aAmCNC,uBAhBS,SAAAC,GACtB,MAAO,CACLN,OAAQM,EAAM9B,MAAMwB,OACpBE,QAASI,EAAM9B,MAAM0B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAII,SAAAS,GACzB,MAAO,CACLX,cAAe,SAACC,EAAOC,GAAR,OACbS,EAASC,IAAoBX,EAAOC,QAI3BM,CAGbK,YAAiBf,EAAQgB","file":"static/js/5.8e7ad07e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\",\"Span\":\"Order_Span__jJXLw\"};","import React from \"react\";\nimport classes from \"./Order.module.css\";\n\nconst order = props => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return (\n      <span key={ig.name} className={classes.Span}>\n        {ig.name} ({ig.amount})\n      </span>\n    );\n  });\n  return (\n    <div className={classes.Order}>\n      <p>Ingredients: {ingredientOutput}</p>\n      <p>\n        Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default order;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/WithErrorHandler/WithErrorHandler\";\nimport * as actions from \"../../store/actions/index\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order => (\n        <Order\n          key={order.id}\n          ingredients={order.ingredients}\n          price={order.price}\n        />\n      ));\n    }\n    return <div>{orders}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) =>\n      dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n"],"sourceRoot":""}